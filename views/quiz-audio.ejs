<!DOCTYPE html>
<html lang="ja">
<%- include('partials/head') %>
<body>
    <div class="container mt-5">
        <%- include('partials/header') %>
        <%- include('partials/nav') %>

        <main style="max-width: 90%; margin: 0 auto;">
            <section class="quiz-container" style="max-width: 100%;">
                <h2 class="h4 mb-4">音階当てクイズ</h2>
                <div id="quiz-content"></div>
                <button class="btn btn-primary" id="quiz-submit">回答する</button>
            </section>
        </main>
    </div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', async () => {
        try {
            await initQuiz();
            setupEventListeners();
        } catch (error) {
            console.error('初期化に失敗:', error);
        }
    });

    const QUIZ_COUNT = 3; // 表示する問題数を定数で指定
    let quizData = null;
    let correctAnswers = {};

    async function initQuiz() {
        try {
            const response = await fetch('/quiz-data.json');
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            quizData = await response.json();
            displayQuizzes();
        } catch (error) {
            console.error('クイズデータの取得に失敗:', error);
        }
    }

    function getRandomQuizzes(quizzes, count) {
        return quizzes.sort(() => 0.5 - Math.random()).slice(0, count);
    }

    function setupEventListeners() {
        const submitButton = document.getElementById('quiz-submit');
        if (submitButton && !submitButton.dataset.listenerAdded) {
            submitButton.addEventListener('click', submitAnswers);
            submitButton.dataset.listenerAdded = 'true';
        }
    }

    function displayQuizzes() {
        if (!quizData?.audio) return;

        const quizzes = getRandomQuizzes(quizData.audio, QUIZ_COUNT);
        const container = document.getElementById('quiz-content');
        if (!container) return;

        container.innerHTML = ''; // 既存のクイズをクリア

        quizzes.forEach((quiz, index) => {
            const section = document.createElement('section');
            section.className = 'mb-4';

            const questionElement = document.createElement('p');
            questionElement.className = 'mb-4';
            questionElement.textContent = `問題 ${index + 1}`;
            section.appendChild(questionElement);

            const playButton = document.createElement('button');
            playButton.className = 'btn btn-secondary mb-4';
            playButton.innerHTML = `<i class="bi bi-play-fill me-2"></i>音を再生`;
            playButton.dataset.audioFile = `${quiz.audioSrc}`;
            playButton.addEventListener('click', (event) => playAudio(event));
            section.appendChild(playButton);

            const answerInput = document.createElement('input');
            answerInput.type = 'text';
            answerInput.className = 'form-control mb-4 w-50';
            answerInput.id = `quiz-answer-${index}`;
            answerInput.placeholder = '音階を入力してください';
            section.appendChild(answerInput);

            container.appendChild(section);

            correctAnswers[index] = quiz.correctAnswer;
        });
    }

    // 音声を再生する関数
    function playAudio(event) {
        const audioFile = event.target.dataset.audioFile;
        console.log('再生する音声ファイル:', audioFile);
        if (audioFile) {
            const audio = new Audio(audioFile);
            audio.play().catch(error => {
                console.error('音声の再生に失敗しました:', error);
            });
        } else {
            console.error('Audio file not found.');
        }
    }

    function submitAnswers() {
        let correctCount = 0;

        for (let index = 0; index < QUIZ_COUNT; index++) {
            const answerInput = document.getElementById(`quiz-answer-${index}`);
            // console.log('回答:', answerInput?.value);
            // console.log('正解:', correctAnswers[index]);
            if (answerInput && answerInput.value.trim() === correctAnswers[index]) {
                correctCount++;
            }
        }

        // 結果を表示
        alert(`正解数: ${correctCount} / ${QUIZ_COUNT}`);
    }
</script>
</body>
</html>